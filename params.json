{"name":"Legato","body":"# Legato: Google Analytics Model/Mapper #\r\n\r\n## [Check out the Wiki!](https://github.com/tpitale/legato/wiki) ##\r\n\r\n## Google Analytics Management ##\r\n\r\n1. Get an OAuth2 Access Token from Google, Read about [OAuth2](https://github.com/tpitale/legato/wiki/OAuth2-and-Google)\r\n\r\n        access_token = OAuth2 Access Token # from Google\r\n\r\n2. Create a New User with the Access Token\r\n\r\n        user = Legato::User.new(access_token)\r\n\r\n3. List the Accounts and Profiles of the first Account\r\n\r\n        user.accounts\r\n        user.accounts.first.profiles\r\n\r\n4. List all the Profiles the User has Access to\r\n\r\n        user.profiles\r\n\r\n5. Get a Profile\r\n\r\n        profile = user.profiles.first\r\n\r\n6. The Profile Carries the User\r\n\r\n        profile.user == user #=> true\r\n\r\n\r\n## Google Analytics Model ##\r\n\r\n    class Exit\r\n      extend Legato::Model\r\n\r\n      metrics :exits, :pageviews\r\n      dimensions :page_path, :operating_system, :browser\r\n    end\r\n\r\n    profile.exits #=> returns a Legato::Query\r\n    profile.exits.each {} #=> any enumerable kicks off the request to GA\r\n\r\n## Metrics & Dimensions ##\r\n\r\nhttp://code.google.com/apis/analytics/docs/gdata/dimsmets/dimsmets.html\r\n\r\n    metrics :exits, :pageviews\r\n    dimensions :page_path, :operating_system, :browser\r\n\r\n## Filtering ##\r\n\r\nCreate named filters to wrap query filters.\r\n\r\nHere's what google has to say: http://code.google.com/apis/analytics/docs/gdata/v3/reference.html#filters\r\n\r\n### Examples ###\r\n\r\nReturn entries with exits counts greater than or equal to 2000\r\n\r\n    filter :high_exits, lambda {gte(:exits, 2000)}\r\n\r\nReturn entries with pageview metric less than or equal to 200\r\n\r\n    filter :low_pageviews, lambda {lte(:pageviews, 200)}\r\n\r\nFilters with dimensions\r\n\r\n    filter :for_browser, lambda {|browser| matches(:broswer, browser)}\r\n\r\nFilters with OR\r\n\r\n    filter :browsers, lambda {|*browsers| browsers.map {|browser| matches(:broswer, browser)}}\r\n\r\n\r\n## Using and Chaining Filters ##\r\n\r\nPass the profile as the first or last parameter into any filter.\r\n\r\n    Exit.for_browser(\"Safari\", profile)\r\n\r\nChain two filters.\r\n\r\n    Exit.high_exits.low_pageviews(profile)\r\n\r\nProfile gets a method for each class extended by Legato::Model\r\n\r\n    Exit.results(profile) == profile.exit\r\n\r\nWe can chain off of that method, too.\r\n\r\n    profile.exit.high_exits.low_pageviews.by_pageviews\r\n\r\nChaining order doesn't matter. Profile can be given to any filter.\r\n\r\n    Exit.high_exits(profile).low_pageviews == Exit.low_pageviews(profile).high_exits\r\n\r\nBe sure to pass the appropriate number of arguments matching the lambda for your filter.\r\n\r\nFor a filter defined like this:\r\n\r\n    filter :browsers, lambda {|*browsers| browsers.map {|browser| matches(:broswer, browser)}}\r\n\r\nWe can use it like this, passing any number of arguments:\r\n\r\n    Exit.browsers(\"Firefox\", \"Safari\", profile)\r\n\r\n## Google Analytics Supported Filtering Methods ##\r\n\r\nGoogle Analytics supports a significant number of filtering options.\r\n\r\nHere is what we can do currently:\r\n(the operator is a method available in filters for the appropriate metric or dimension)\r\n\r\nOperators on metrics (method => GA equivalent):\r\n\r\n    eql     => '==',\r\n    not_eql => '!=',\r\n    gt      => '>',\r\n    gte     => '>=',\r\n    lt      => '<',\r\n    lte     => '<='\r\n\r\nOperators on dimensions:\r\n\r\n    matches          => '==',\r\n    does_not_match   => '!=',\r\n    contains         => '=~',\r\n    does_not_contain => '!~',\r\n    substring        => '=@',\r\n    not_substring    => '!@'\r\n\r\n## Accounts, WebProperties, Profiles, and Goals ##\r\n\r\n    > Legato::Management::Account.all(user)\r\n    > Legato::Management::WebProperty.all(user)\r\n    > Legato::Management::Profile.all(user)\r\n\r\n## Other Parameters Can be Passed to a call to #results ##\r\n\r\n  * :start_date - The date of the period you would like this report to start\r\n  * :end_date - The date to end, inclusive\r\n  * :limit - The maximum number of results to be returned\r\n  * :offset - The starting index\r\n  * :sort - metric/dimension to sort by\r\n\r\n## License ##\r\n\r\n  (The MIT License)\r\n\r\n  Copyright (c) 2012 Tony Pitale\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining\r\n  a copy of this software and associated documentation files (the\r\n  'Software'), to deal in the Software without restriction, including\r\n  without limitation the rights to use, copy, modify, merge, publish,\r\n  distribute, sublicense, and/or sell copies of the Software, and to\r\n  permit persons to whom the Software is furnished to do so, subject to\r\n  the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be\r\n  included in all copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","tagline":"GA Core Reporting & Management API Client","google":"UA-3879168-12","note":"Don't delete this file! It's used internally to help with page regeneration."}